@* Generator: Template TypeVisibility: Internal GeneratePrettyNames: true *@
@using System
@using System.Collections.Generic
@using Hangfire.Dashboard
@using Hangfire.Dashboard.Pages
@using Hangfire.Dashboard.Resources
@using Hangfire.Storage
@inherits RazorPage
@{
    Layout = new LayoutPage(Strings.OnEventJobsPage_Title);
    List<OnEventJobDto> onEventJobs;

    int from, perPage;

    int.TryParse(Query("from"), out from);
    int.TryParse(Query("count"), out perPage);

    Pager pager = null;

    using (var connection = Storage.GetConnection())
    {
        var storageConnection = connection as JobStorageConnection;
        if (storageConnection != null)
        {
            pager = new Pager(from, perPage, storageConnection.GetOnEventJobCount());
            onEventJobs = storageConnection.GetOnEventJobs(pager.FromRecord, pager.FromRecord + pager.RecordsPerPage);
        }
        else
        {
            onEventJobs = connection.GetOnEventJobs();
        }
    }
}
<style>
    .table {
        /*table-layout: fixed;*/
    }

        .table td {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
</style>
<div class="row">
    <div class="col-md-12">
        <h1 class="page-header">@Strings.OnEventJobsPage_Title</h1>

        @if (onEventJobs.Count == 0)
        {
            <div class="alert alert-info">
                @Strings.OnEventJobsPage_NoJobs
            </div>
        }
        else
        {
            <div class="js-jobs-list">
                <div class="btn-toolbar btn-toolbar-top">
                    <button class="js-jobs-list-command btn btn-sm btn-primary"
                            data-url="@Url.To("/onevent/trigger")"
                            data-loading-text="@Strings.OnEventJobsPage_Triggering"
                            disabled="disabled">
                        <span class="glyphicon glyphicon-play-circle"></span>
                        @Strings.OnEventJobsPage_TriggerNow
                    </button>

                    <button class="js-jobs-list-command btn btn-sm btn-default"
                            data-url="@Url.To("/onevent/remove")"
                            data-loading-text="@Strings.Common_Deleting"
                            data-confirm="@Strings.Common_DeleteConfirm"
                            disabled="disabled">
                        <span class="glyphicon glyphicon-remove"></span>
                        @Strings.Common_Delete
                    </button>

                    @if (pager != null)
                    {
                        @: @Html.PerPageSelector(pager)
                    }
                </div>

                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th class="min-width">
                                    <input type="checkbox" class="js-jobs-list-select-all" />
                                </th>
                                @*<th class="min-width">@Strings.Common_Id</th>*@
                                <th class="min-width">@Strings.OnEventJobsPage_Table_Signal</th>
                                <th class="min-width">@Strings.OnEventJobsPage_Table_Trigger</th>
                                <th class="min-width">@Strings.OnEventJobsPage_Table_Name</th>
                                <th class="align-right min-width">@Strings.OnEventJobsPage_Table_LastExecution</th>
                                <th class="align-right min-width">@Strings.Common_Created</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var job in onEventJobs)
                            {
                                <tr class="js-jobs-list-row hover">
                                    <td>
                                        <input type="checkbox" class="js-jobs-list-checkbox" name="jobs[]" value="@job.Id" />
                                    </td>
                                    @*<td class="min-width" style="max-width:200px">@job.Id</td>*@

                                    <td class="min-width">
                                        @* ReSharper disable once EmptyGeneralCatchClause *@
                                        @{
                                            string triggerSignal = job.TriggerSignal;

                                        }

                                        @if (triggerSignal != null)
                                        {
                                            <code title="@triggerSignal">@triggerSignal</code>
                                        }
                                        
                                    </td>

                                    <td class="min-width">
                                        @* ReSharper disable once EmptyGeneralCatchClause *@
                                        @{
                                            string triggerExpression = job.TriggerExpression;
                                        }

                                        @if (triggerExpression != null)
                                        {
                                            <code title="@triggerExpression">@job.TriggerExpression</code>
                                        }
                                        else
                                        {
                                            <code>@job.TriggerExpression</code>
                                        }
                                    </td>

                                    <td class="min-width">
                                        @if (!String.IsNullOrWhiteSpace(job.Name))
                                        {
                                            <span data-container="body">@job.Name</span>
                                        }
                                        
                                    </td>
                                    
                                    <td class="align-right min-width">
                                        @if (job.LastExecution != null)
                                        {
                                            if (!String.IsNullOrEmpty(job.LastJobId))
                                            {
                                                <a href="@Url.JobDetails(job.LastJobId)">
                                                    <span class="label label-default label-hover" style="@($"background-color: {JobHistoryRenderer.GetForegroundStateColor(job.LastJobState)};")">
                                                        @Html.RelativeTime(job.LastExecution.Value)
                                                    </span>
                                                </a>
                                            }
                                            else
                                            {
                                                <em>
                                                    @Strings.OnEventJobsPage_Canceled @Html.RelativeTime(job.LastExecution.Value)
                                                </em>
                                            }
                                        }
                                        else
                                        {
                                            <em>@Strings.Common_NotAvailable</em>
                                        }
                                    </td>
                                    <td class="align-right min-width">
                                        @if (job.CreatedAt != null)
                                        {
                                            @Html.RelativeTime(job.CreatedAt.Value)
                                        }
                                        else
                                        {
                                            <em>N/A</em>
                                        }
                                    </td>
                                </tr>
                             }
                        </tbody>
                    </table>
                </div>

                @if (pager != null)
                {
                    @: @Html.Paginator(pager)
                }
            </div>
        }
    </div>
</div>    